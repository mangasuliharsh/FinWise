# Application Name
spring.application.name=FinWise

# Database Connection
spring.datasource.url=jdbc:mysql://localhost:3306/finwise?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=false
spring.datasource.username=root
spring.datasource.password=myadmin123
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA / Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Initialize schema using schema.sql
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true

# Server Port
server.port=8080

# JWT Settings
jwt.secret=hG7#f9!Xp2Lk@94!Sdl3!jPq1VbZ8@wMm
jwt.expiration=8640000000

# Logging
logging.level.org.springframework.web=INFO
logging.level.com.ffp=DEBUG

# OAuth2 Client - Google (put your real client ID and secret here)
spring.security.oauth2.client.registration.google.client-id=164887925410-tmlar9oaclp8067hj6m8dnhpvknc38ae.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=email

# OAuth2 Client - Authorized Redirect URI (must match Google Console config)
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google

# CORS Configuration (frontend URL)
frontend.redirect-uri=http://localhost:3000/login
